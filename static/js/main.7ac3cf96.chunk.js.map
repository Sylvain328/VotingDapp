{"version":3,"sources":["getWeb3.js","components/Header.js","enums/WorkflowStatus.js","components/VoterAction.js","components/NextStepButton.js","components/ProposalRegistrationAction.js","components/ProposalChoice.js","components/ProposalList.js","components/VoteStep.js","components/VoteProcess.js","components/VoteResult.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","on","location","reload","console","log","provider","providers","HttpProvider","Header","props","className","this","account","isOwner","isVoter","React","Component","WorkflowStatus","RegisteringVoters","ProposalsRegistrationStarted","ProposalsRegistrationEnded","VotingSessionStarted","VotingSessionEnded","VotesTallied","VoterAction","addVoter","document","getElementById","innerHTML","address","value","checkVoter","element","getVoter","voterData","result","isRegistered","hasVoted","votedProposalId","type","id","ref","input","step","onClick","NextStepButton","nextStep","ProposalAction","addProposal","proposal","addNewProposal","ProposalChoice","vote","event","setVote","target","description","ProposalList","state","isLoaded","componentDidMount","getProposals","i","getOneProposal","proposals","push","setState","map","index","key","VoteStep","currentStep","activeStep","number","stepLabel","VoteProcess","steps","itemList","forEach","item","VoteResult","winningProposalId","winningProposal","voteCount","App","contract","eth","getAccounts","accounts","net","getId","networkId","deployedNetwork","VotingContract","networks","instance","Contract","abi","methods","owner","call","workflowStatus","from","voter","winningProposalID","options","filter","fromBlock","events","VoterRegistered","returnValues","alert","error","startProposalsRegistering","send","endProposalsRegistering","startVotingSession","endVotingSession","tallyVotes","length","getWinner","winningPropsalId","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ac3cf96.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n\n          window.ethereum.on('accountsChanged', function(){\n            window.location.reload();\n          });\n\n          window.ethereum.on('chainChanged', function(){\n            window.location.reload();\n          });\n\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React from 'react';\r\n\r\nexport default class Header extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Header\">\r\n                <div>\r\n                    <h1>Alyra Voting</h1>\r\n                </div>\r\n                <div>\r\n                    <div>{this.props.account}</div>\r\n                    <div className='StatusContainer'>\r\n                        <div className={`OwnerStatus ${this.props.isOwner ? \"\" : \"HideComponent\"}`}>owner</div>\r\n                        <div className={`VoterStatus ${this.props.isVoter ? \"\" : \"HideComponent\"}`}>voter</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default class WorkflowStatus {\r\n    static RegisteringVoters = \"0\";\r\n    static ProposalsRegistrationStarted = \"1\";\r\n    static ProposalsRegistrationEnded = \"2\";\r\n    static VotingSessionStarted = \"3\";\r\n    static VotingSessionEnded = \"4\";\r\n    static VotesTallied = \"5\";\r\n}","import React from 'react';\r\nimport WorkflowStatus from \"../enums/WorkflowStatus.js\";\r\n\r\nexport default class VoterAction extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    addVoter = async () => {\r\n        const element = document.getElementById(\"VoterResult\");\r\n        // Reset the field\r\n        element.innerHTML = \"\";\r\n        \r\n        await this.props.addVoter(this.address.value);\r\n\r\n        document.getElementById(\"VoterResult\").innerHTML = \"Voter added !\";\r\n    };\r\n\r\n    checkVoter = async () => {\r\n\r\n        const element = document.getElementById(\"VoterResult\");\r\n        // Reset the field\r\n        element.innerHTML = \"\";\r\n\r\n        const voterData = await this.props.getVoter(this.address.value);\r\n\r\n        let result = \"\";\r\n        if(voterData.isRegistered) {\r\n            result += \"&#10004; it is a voter<br>\";\r\n        }\r\n        else {\r\n            result += \"&#10060; it is not a voter<br>\";\r\n        }\r\n\r\n        if(voterData.hasVoted) {\r\n            result += \"&#10004; it has voted for proposal \" + voterData.votedProposalId + \"<br>\";\r\n        }\r\n        else {\r\n            result += \"\t&#10060; it hasn't voted yet<br>\"\r\n        }\r\n\r\n        element.innerHTML = result;\r\n    };\r\n    \r\n    render(){\r\n        return(\r\n            <div className='Action'>\r\n                <h2>Voter Data</h2>\r\n                <input className=\"AddressInput\" type=\"text\" id=\"ToTreatAccount\" ref={(input) => { this.address = input }} />\r\n                <div className='VoterButtons'>\r\n                    <button className={`VoterButton ${this.props.isOwner && this.props.step == WorkflowStatus.RegisteringVoters ? \"\" : \"HideComponent\"}`} onClick={this.addVoter}>Add Voter</button>\r\n                    <button className={`VoterButton ${this.props.isVoter ? \"\" : \"HideComponent\"}`} onClick={this.checkVoter}>Check Voter</button>\r\n                </div>\r\n                <div id=\"VoterResult\">\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport WorkflowStatus from \"../enums/WorkflowStatus.js\";\r\n\r\nexport default class NextStepButton extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <button className={`NextStepButton ${this.props.isOwner && this.props.step != WorkflowStatus.VotesTallied ? \"\" : \"HideComponent\"}`} onClick={this.props.nextStep}>Next Step</button>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport WorkflowStatus from \"../enums/WorkflowStatus.js\";\r\n\r\nexport default class ProposalAction extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    addProposal = async () => {\r\n        const element = document.getElementById(\"ProposalAdding\");\r\n        // Reset the field\r\n        element.innerHTML = \"\";\r\n        await this.props.addProposal(this.proposal.value);\r\n        await this.props.addNewProposal(this.proposal.value);\r\n        element.innerHTML = \"Proposal added !\";\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <div className={`Action ${this.props.step == WorkflowStatus.ProposalsRegistrationStarted ? \"\" : \"HideComponent\"}`}>\r\n                <h2>Proposal Registration</h2>\r\n                <input className=\"ProposalInput\" type=\"text\" id=\"ToAddProposal\" ref={(input) => { this.proposal = input }} />\r\n                <div className='ProposalButtons'>\r\n                    <button className='ProposalButton' onClick={this.addProposal}>Add</button>\r\n                </div>\r\n                <div id=\"ProposalAdding\">\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport WorkflowStatus from \"../enums/WorkflowStatus.js\";\r\n\r\nexport default class ProposalChoice extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    vote = async (event) => {\r\n        await this.props.setVote(event.target.id);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='Proposal'>\r\n                {this.props.id} - {this.props.description}\r\n                <label className={this.props.step == WorkflowStatus.VotingSessionStarted && this.props.hasVoted && this.props.votedProposalId == this.props.id ? \"\" : \"HideComponent\"}>- You vote for it!</label>\r\n                <button id={this.props.id} className={`VoteButton ${this.props.step == WorkflowStatus.VotingSessionStarted && !this.props.hasVoted ? \"\" : \"HideComponent\"}`} onClick={this.vote}>Vote</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ProposalChoice from \"./ProposalChoice.js\";\r\nimport WorkflowStatus from \"../enums/WorkflowStatus.js\";\r\n\r\nexport default class ProposalList extends React.Component {\r\n    state = { isLoaded: false };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    componentDidMount = async () => {\r\n        await this.getProposals();\r\n    }\r\n\r\n    getProposals = async () => {\r\n\r\n        try {\r\n\r\n            var i = 0;\r\n\r\n            do {\r\n                let proposal = await this.props.getOneProposal(i);\r\n                this.props.proposals.push(proposal);\r\n                i++;\r\n            } while(true);\r\n        }\r\n        catch(error) {\r\n            this.isLoaded = true;\r\n            this.setState({ isLoaded: true });\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        if (!this.isLoaded) {\r\n            return (<div></div>);\r\n        }\r\n\r\n        return(\r\n            <div id='ProposalList' className={`Action ${this.props.step != WorkflowStatus.RegisteringVoters ? \"\" : \"HideComponent\"}`}>\r\n                <h2>All Proposals</h2>\r\n                {this.props.proposals.map((proposal, index) => (\r\n                    <ProposalChoice key={index} id={index} description={proposal.description} setVote={this.props.setVote} step={this.props.step} hasVoted={this.props.hasVoted} votedProposalId={this.props.votedProposalId}/>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class VoteStep extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={this.props.currentStep == this.props.activeStep ? 'VoteStep active' : 'VoteStep'}>\r\n                <label>{this.props.number}</label>\r\n                <p>{this.props.stepLabel}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport VoteStep from './VoteStep.js';\r\nimport WorkflowStatus from \"../enums/WorkflowStatus.js\";\r\n\r\nexport default class VoteProcess extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n\r\n        const items =['Voters registration','Proposals registration','Voting','Vote result'];\r\n        const steps = [WorkflowStatus.RegisteringVoters, WorkflowStatus.ProposalsRegistrationStarted, WorkflowStatus.VotingSessionStarted, WorkflowStatus.VotesTallied];\r\n\r\n        let itemList=[];\r\n\r\n        items.forEach((item,index) => {\r\n            itemList.push(<VoteStep key={index} number={index+1} stepLabel={item} currentStep={this.props.currentStep} activeStep={steps[index]}/>);\r\n        });\r\n\r\n        return(\r\n            <div className='VoteProcess'>\r\n                {itemList}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport WorkflowStatus from \"../enums/WorkflowStatus.js\";\r\n\r\nexport default class VoteResult extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={`Action ${this.props.step == WorkflowStatus.VotesTallied ? \"\" : \"HideComponent\"}`}>\r\n                <h2>Vote Result</h2>\r\n                <div>\r\n                    The winning proposal is :\r\n                    <div id=\"winnerDiv\">\r\n                        <label>{this.props.winningProposalId} - {this.props.winningProposal == null ? \"\" : this.props.winningProposal.description} with {this.props.winningProposal == null ? \"\" : this.props.winningProposal.voteCount} votes </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\nimport VotingContract from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Header from \"./components/Header.js\";\nimport VoterAction from \"./components/VoterAction.js\";\nimport NextStepButton from \"./components/NextStepButton.js\";\nimport ProposalRegistrationAction from \"./components/ProposalRegistrationAction.js\";\nimport ProposalList from \"./components/ProposalList.js\";\nimport VoteProcess from \"./components/VoteProcess.js\";\nimport VoteResult from \"./components/VoteResult.js\";\nimport WorkflowStatus from \"./enums/WorkflowStatus.js\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { web3: null, \n    contract: null, \n    account: null, \n    isOwner: false, \n    isVoter: false, \n    step: null, \n    proposals: null, \n    hasVoted: false, \n    votedProposalId: null,\n    winningProposalId: null,\n    winningProposal: null\n  };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = VotingContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        VotingContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      const owner = await instance.methods.owner().call();\n      const isOwner = owner == accounts[0];\n\n      // Get the process step\n      const currentStep = await instance.methods.workflowStatus().call();\n      \n      // Set Voter data\n      let isVoter = false;\n      let hasVoted = false; \n      let votedProposalId = null;\n\n      // try to get the voter data, if it fails, account is not a voter\n      try {\n        const voter = await instance.methods.getVoter(accounts[0]).call({from: accounts[0]});\n        isVoter = voter.isRegistered;\n        hasVoted = voter.hasVoted;\n        votedProposalId = voter.votedProposalId;\n      }\n      catch(error) {\n      }\n\n      // If the process is on the VotesTallied step, we can set winningData\n      let winningProposalId = null;\n      let winningProposal = null;\n\n      if(currentStep == WorkflowStatus.VotesTallied) {\n        winningProposalId = await instance.methods.winningProposalID().call();;\n        winningProposal = await instance.methods.getOneProposal(winningProposalId).call({from: accounts[0]});;\n      }\n      \n      // Event options\n      let options = {\n        filter: {\n            value: [],\n        },\n        fromBlock: 0\n      };\n\n      // Event - When a voter is registered, assign the isVoter to true\n      // To show the logo on the top when the owner add himself as a voter\n      await instance.events.VoterRegistered(options)\n      .on('data', event => {\n\n        if(event.returnValues[0] == accounts[0]) {\n          this.setState({isVoter: true});\n        }\n      });\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, \n        contract: instance, \n        account: accounts[0], \n        isOwner: isOwner, \n        isVoter: isVoter, \n        step: currentStep, \n        proposals: [], \n        hasVoted: hasVoted, \n        votedProposalId: votedProposalId,\n        winningProposalId: winningProposalId,\n        winningProposal: winningProposal\n      });\n    \n      \n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  /** Process to the next voting step */\n  nextStep = async () => {\n\n    // Depending on actuel process step\n    switch(this.state.step) {\n\n      case WorkflowStatus.RegisteringVoters:\n        await this.state.contract.methods.startProposalsRegistering().send({ from: this.state.account });\n        this.setState({step: WorkflowStatus.ProposalsRegistrationStarted});\n        break;\n\n      case WorkflowStatus.ProposalsRegistrationStarted:\n        await this.state.contract.methods.endProposalsRegistering().send({ from: this.state.account });\n        await this.state.contract.methods.startVotingSession().send({ from: this.state.account });\n        this.setState({step: WorkflowStatus.VotingSessionStarted});\n        break;\n      \n      case WorkflowStatus.VotingSessionStarted:\n        await this.state.contract.methods.endVotingSession().send({ from: this.state.account });\n        await this.state.contract.methods.tallyVotes().send({ from: this.state.account });\n        const winningProposalId = await this.state.contract.methods.winningProposalID().call();\n        const winningProposal = await this.getOneProposal(winningProposalId);\n        this.setState({step: WorkflowStatus.VotesTallied, winningProposalId: winningProposalId, winningProposal: winningProposal});\n        break;\n    }\n  };\n\n  /** Add a new voter on the smart contract */\n  addVoter = async (address) => {\n    await this.state.contract.methods.addVoter(address).send({from: this.state.account});\n  }\n\n  /** Get voter data from the smart contract */\n  getVoter = async (address) => {\n    return await this.state.contract.methods.getVoter(address).call({from: this.state.account});\n  }\n\n  /** Add a new proposal on the smart contract */\n  addProposal = async (proposal) => {\n    await this.state.contract.methods.addProposal(proposal).send({from: this.state.account});\n  }\n\n  /** Add a new proposal in the list of proposal */\n  addNewProposal = async(description) => {\n    const newId = this.state.proposals.length;\n    this.state.proposals.push({description: description});\n    this.setState({proposals: this.state.proposals});\n  }\n\n  /** Get proposal data from the smart contract */\n  getOneProposal = async (id) => {\n    return await this.state.contract.methods.getOneProposal(id).call({from: this.state.account});\n  }\n\n  /** Set a vote for a proposal on the smart contract */\n  setVote = async (id) => {\n    await this.state.contract.methods.setVote(id).send({from: this.state.account});\n    this.setState({hasVoted: true, votedProposalId: id});\n  }\n\n  /** Get the winning proposal on the smart contract */\n  getWinner = async() => {\n    return await this.state.contract.methods.winningProposalID().call();\n  }\n\n  render() {\n\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n\n    // If it's not the owner and not a voter, show a message that indicate that you can't access\n    if(!this.state.isOwner && !this.state.isVoter){\n      return(\n        <div className=\"App\">\n          <h1>{this.state.account} is not registered as a Voter</h1>\n          <div>To access the voting system, contact the contract owner</div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"App\">\n        <Header account={this.state.account} isOwner={this.state.isOwner} isVoter={this.state.isVoter}/>\n        <VoteProcess currentStep={this.state.step} nextStep={ this.nextStep }/>\n        <div className=\"ActionContainer\">\n          <VoterAction addVoter={this.addVoter} getVoter={this.getVoter} isOwner={this.state.isOwner} isVoter={this.state.isVoter} step={this.state.step} />\n          <ProposalRegistrationAction addProposal={this.addProposal} addNewProposal={this.addNewProposal} step={this.state.step}/>\n          <VoteResult winningPropsalId={this.state.winningPropsalId} winningProposal={this.state.winningProposal} step={this.state.step}/>\n          <ProposalList getOneProposal={this.getOneProposal} setVote={this.setVote} step={this.state.step} proposals={this.state.proposals} hasVoted={this.state.hasVoted} votedProposalId={this.state.votedProposalId}/>\n        </div>\n        <NextStepButton isOwner={this.state.isOwner} step={this.state.step} nextStep={this.nextStep}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}